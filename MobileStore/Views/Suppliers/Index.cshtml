@*@model PaginatedList<MobileStore.Models.Supplier>*@
@model IEnumerable<MobileStore.Models.Supplier>
@using MobileStore.Models
@using MobileStore
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<div class="row">
    <div class="col-lg-12">

        <div class="card">
            <div class="card-header">
                Danh sách Nhà cung cấp
            </div>
            <div class="card-body">
                <form asp-action="Index" method="get" class="form-horizontal">
                    <div class="form-group row">
                        <div class="col-lg-6">
                            <div class="input-group">
                                <span class="input-group-btn">
                                    <button type="submit" class="btn btn-primary"><i class="fa fa-search"></i> Search</button>
                                </span>
                                <input name="sortOrder" hidden value="@ViewData["CurrentSort"]" type="text" class="form-control">
                                <input name="SearchString" value="@ViewData["CurrentFilter"]" type="text" class="form-control" placeholder="Tìm kiếm theo tên...">
                            </div>
                        </div>
                    </div>

                </form>
                <p>
                    <a asp-action="Create">
                        <button type="button" class="btn btn-success"><i class="fa fa-plus"></i>&nbsp; Thêm nhà cung cấp</button>
                    </a>
                </p>
                <div class="table-striped table-responsive">
                    <table class="table">
                        <thead>
                        <tr>
                            <th>
                                <a asp-action="Index" asp-route-sortOrder="@ViewData["IDSortParm"]" asp-route-searchString="@ViewData["CurrentFilter"]">
                                    @Html.DisplayNameFor(model => model.SupplierID)
                                </a>
                            </th>
                            <th>
                                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-searchString="@ViewData["CurrentFilter"]">
                                    @Html.DisplayNameFor(model => model.Name)
                                </a>
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Address)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Phone)
                            </th>
                            <th>

                                <a asp-action="Index" asp-route-sortOrder="@ViewData["EmailSortParm"]" asp-route-searchString="@ViewData["CurrentFilter"]">
                                    @Html.DisplayNameFor(model => model.Email)
                                </a>
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Code)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Status)
                            </th>
                            <th>
                                <a asp-action="Index" asp-route-sortOrder="@ViewData["PicNameSortParm"]" asp-route-searchString="@ViewData["CurrentFilter"]">
                                    @Html.DisplayNameFor(model => model.PicName)
                                </a>
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.PicPhone)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.PicEmail)
                            </th>
                            <th>

                            </th>
                           
                        </tr>
                        </thead>
                        <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.SupplierID)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Address)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Phone)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Email)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Code)
                                </td>
                                <td>
                                    <span class="@("badge " + (item.Status == SupplierStatus.Active ? "badge-success" : "badge-secondary"))">@Html.DisplayFor(modelItem => item.Status)</span>
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PicName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PicPhone)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PicEmail)
                                </td>
                                <td>
                                    <div class="btn-group">
                                        <a  class="btn btn-warning btn-sm" asp-action="Edit" asp-route-id="@item.SupplierID">
                                           <i class="fa fa-pencil-square-o"></i>&nbsp; Sửa
                                        </a>


                                        <a class="btn btn-primary btn-sm" asp-action="Details" asp-route-id="@item.SupplierID">
                                            <i class="fa fa-info"></i>&nbsp; Chi tiết
                                        </a>




                                        <a  class="btn btn-danger btn-sm" asp-action="Delete" asp-route-id="@item.SupplierID">
                                           <i class="fa fa-trash-o"></i>&nbsp; Xóa
                                        </a>
                                    </div>
                                       

</td>
                            </tr>
                        }
                        </tbody>
                    </table>
                    @{

                        PaginatedList<MobileStore.Models.Supplier> PaginatedModel = Model as PaginatedList<MobileStore.Models.Supplier>;

                        string prevDisabled = !PaginatedModel.HasPreviousPage ? "disabled" : "";

                        string nextDisabled = !PaginatedModel.HasNextPage ? "disabled" : "";


                    }
                    <nav aria-label="Page navigation example">
                        <ul class="pagination">
                            <li class="page-item @prevDisabled"><a asp-action="Index"

                                                                   asp-route-sortOrder="@ViewData["CurrentSort"]"

                                                     asp-route-page="@(PaginatedModel.PageIndex - 1)"

                                                                   asp-route-currentFilter="@ViewData["CurrentFilter"]"

                                                     class="page-link" >Previous</a></li>
                            @for (var i = 1; i <= PaginatedModel.TotalPages; i++)
                            {
                                <li class="page-item @( @PaginatedModel.PageIndex == i ? "active" : " " )"><a asp-action="Index"

                                                         asp-route-sortOrder="@ViewData["CurrentSort"]"

                                                         asp-route-page="@i"

                                                         asp-route-currentFilter="@ViewData["CurrentFilter"]" class="page-link">@(i)</a></li>

                            }
                            <li class="page-item @nextDisabled"><a asp-action="Index"

                                                                   asp-route-sortOrder="@ViewData["CurrentSort"]"

                                                     asp-route-page="@(PaginatedModel.PageIndex + 1)"

                                                                   asp-route-currentFilter="@ViewData["CurrentFilter"]"

                                                    class="page-link" >Next</a></li>
                        </ul>
                    </nav>
                    @*<a asp-action="Index"

                           asp-route-sortOrder="@ViewData["CurrentSortOrder"]"

                           asp-route-page="@(PaginatedModel.PageIndex - 1)"

                           asp-route-currentFilter="@ViewData["FilterParam"]"

                           class="btn btn-default @prevDisabled">

                            Previous

                        </a>*@

                    @*<a asp-action="Index"

                         asp-route-sortOrder="@ViewData["CurrentSortOrder"]"

                          asp-route-page="@(PaginatedModel.PageIndex + 1)"

                          asp-route-currentFilter="@ViewData["FilterParam"]"

                         class="btn btn-default @nextDisabled">

                          Next

                       </a>*@
                </div>
            </div>
        </div>
    </div>
    <!--/.col-->
</div>
<!--/.row-->

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
