@model MobileStore.Models.StockReceivingViewModels.StockReceivingViewModel
@using MobileStore.Models

@{
    ViewData["Title"] = "Thông tin đơn nhập hàng";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">

    <!-- Modal -->
    <div class="modal fade" id="createOrderDetail" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <form asp-action="CreateModelFromSupplier">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Thêm đơn nhập hàng</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">

                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="hidden" asp-for="ModelFromSupplier.StockReceivingID" value="@Model.StockReceiving.StockReceivingID" />
                        @*<div class="form-group row">
                            <label asp-for="ModelFromSupplier.Quantity" class="col-md-4 form-control-label">@Html.DisplayNameFor(model => model.ModelFromSupplier.Quantity)</label>
                            <div class="col-md-8">
                                <input asp-for="ModelFromSupplier.Quantity" type="text" class="form-control" placeholder="Nhập @Html.DisplayNameFor(model=>model.ModelFromSupplier.Quantity)...">
                                <span asp-validation-for="ModelFromSupplier.Quantity" class="invalid-feedback"></span>
                            </div>
                        </div>*@

                        <div class="form-group row">
                            <label asp-for="ModelFromSupplier.PriceBought" class="col-md-4 form-control-label">@Html.DisplayNameFor(model => model.ModelFromSupplier.PriceBought)</label>
                            <div class="col-md-8">
                                <input asp-for="ModelFromSupplier.PriceBought" type="text" class="form-control" placeholder="Nhập @Html.DisplayNameFor(model=>model.ModelFromSupplier.PriceBought)...">
                                <span asp-validation-for="ModelFromSupplier.PriceBought" class="invalid-feedback"></span>
                            </div>
                        </div>

                        <div class="form-group row">
                            <label asp-for="ModelFromSupplier.PriceSold" class="col-md-4 form-control-label">@Html.DisplayNameFor(model => model.ModelFromSupplier.PriceSold)</label>
                            <div class="col-md-8">
                                <input asp-for="ModelFromSupplier.PriceSold" type="text" class="form-control" placeholder="Nhập @Html.DisplayNameFor(model=>model.ModelFromSupplier.PriceSold)...">
                                <span asp-validation-for="ModelFromSupplier.PriceSold" class="invalid-feedback"></span>
                            </div>
                        </div>

                        <div class="form-group row">
                            <label asp-for="ModelFromSupplier.Period" class="col-md-4 form-control-label">@Html.DisplayNameFor(model => model.ModelFromSupplier.Period)</label>
                            <div class="col-md-8">
                                <input asp-for="ModelFromSupplier.Period" type="text" class="form-control" placeholder="Nhập @Html.DisplayNameFor(model=>model.ModelFromSupplier.Period)...">
                                <span asp-validation-for="ModelFromSupplier.Period" class="invalid-feedback"></span>
                            </div>
                        </div>


                        <div class="form-group row">
                            <label asp-for="ModelFromSupplier.ModelID" class="col-md-4 form-control-label">@Html.DisplayNameFor(model => model.ModelFromSupplier.ModelID)</label>
                            <div class="col-md-8">
                                <select class="form-control" asp-for="ModelFromSupplier.ModelID" class="form-control" asp-items="@(new SelectList(Model.Models,"ModelID","Name"))"></select>
                                <span asp-validation-for="ModelFromSupplier.ModelID" class="invalid-feedback"></span>
                            </div>
                        </div>



                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>

                        <button type="submit" class="btn btn-primary">Tạo</button>

                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class=" col-lg-8">
        <div class="card">
            <div class="card-header">
                <strong>Thông đơn hàng</strong>
            </div>
            <div class="card-body">
                <div class="form-group row">
                    <label class="col-md-4 form-control-label">@Html.DisplayNameFor(model => model.StockReceiving.StockReceivingID)</label>
                    <div class="col-md-8">
                        <div class="form-control" class="form-control">
                            @Model.StockReceiving.StockReceivingID
                        </div>
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-md-4 form-control-label">@Html.DisplayNameFor(model => model.StockReceiving.SupplierID)</label>
                    <div class="col-md-8">
                        <div class="form-control" class="form-control">
                            @Model.StockReceiving.Supplier.Name
                        </div>
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-md-4 form-control-label">@Html.DisplayNameFor(model => model.StockReceiving.Date)</label>
                    <div class="col-md-8">
                        <div class="form-control" class="form-control">
                            @Model.StockReceiving.Date
                        </div>
                    </div>
                </div>

               
            </div>
        </div>
        

    </div>
    <div class="col-lg-12">
        <div class="card">
            <div class="card-header">
                Chi tiết đợt nhâp hàng
            </div>
            <div class="card-body">
                @*Search*@
                <form asp-action="Details" asp-route-id="@Model.StockReceiving.StockReceivingID" method="get" class="form-horizontal">
                    <div class="form-group row">
                        <div class="col-lg-6">
                            <div class="input-group">
                                
                                <input name="sortOrder" hidden value="@ViewData["CurrentSort"]" type="text" class="form-control">
                                <input name="SearchString" value="@ViewData["CurrentFilter"]" type="text" class="form-control" placeholder="Tìm kiếm theo Tên mẫu mã...">
                                <span class="input-group-btn">
                                    <button type="submit" class="btn btn-primary"><i class="fa fa-search"></i> Search</button>
                                </span>
                            </div>
                        </div>
                    </div>

                </form>
                
                @*End Search*@
                <p class="mb-3">
                    <button data-toggle="modal" data-target="#createOrderDetail" type="button" class="btn btn-success"><i class="fa fa-plus"></i> Thêm chi tiết đơn hàng</button>
                </p>

                <div class=" table-striped table-responsive">
                    <table class="table">
                        <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.ModelFromSuppliers.First().ModelFromSupplierID)
                            </th>
                            <th>
                                <a asp-action="Details" asp-route-id="@Model.StockReceiving.StockReceivingID" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-searchString="@ViewData["CurrentFilter"]">

                                    @Html.DisplayNameFor(model => model.ModelFromSuppliers.First().Date)
                                </a>
                            </th>
                            <th>
                                <a asp-action="Details" asp-route-id="@Model.StockReceiving.StockReceivingID" asp-route-sortOrder="@ViewData["ModelSortParm"]" asp-route-searchString="@ViewData["CurrentFilter"]">
                                    @Html.DisplayNameFor(model => model.ModelFromSuppliers.First().ModelID)
                                </a>
                            </th>
                            <th>
                                <a asp-action="Details" asp-route-id="@Model.StockReceiving.StockReceivingID" asp-route-sortOrder="@ViewData["PriceBoughtSortParm"]" asp-route-searchString="@ViewData["CurrentFilter"]">
                                    @Html.DisplayNameFor(model => model.ModelFromSuppliers.First().PriceBought)
                                </a>
                            </th>
                            <th>
                                <a asp-action="Details" asp-route-id="@Model.StockReceiving.StockReceivingID" asp-route-sortOrder="@ViewData["PriceSoldSortParm"]" asp-route-searchString="@ViewData["CurrentFilter"]">
                                
                                    @Html.DisplayNameFor(model => model.ModelFromSuppliers.First().PriceSold)
                                </a>
                            </th>
                            <th>
                                <a asp-action="Details" asp-route-id="@Model.StockReceiving.StockReceivingID" asp-route-sortOrder="@ViewData["QuantitySortParm"]" asp-route-searchString="@ViewData["CurrentFilter"]">

                                    @Html.DisplayNameFor(model => model.ModelFromSuppliers.First().Quantity)
                                </a>
                            </th>

                            <th>
                                <a asp-action="Details" asp-route-id="@Model.StockReceiving.StockReceivingID" asp-route-sortOrder="@ViewData["PeriodSortParm"]" asp-route-searchString="@ViewData["CurrentFilter"]">

                                    @Html.DisplayNameFor(model => model.ModelFromSuppliers.First().Period)
                                </a>
                            </th>
                            <th>

                            </th>

                        </tr>
                        </thead>
                        <tbody>
                        @foreach (var item in Model.ModelFromSuppliers)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ModelFromSupplierID)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Date)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Model.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PriceBought)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PriceSold)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Quantity)
                                </td>

                                <td>
                                    @Html.DisplayFor(modelItem => item.Period)
                                </td>


                                <td>
                                    <div class="btn-group">
                                        <a class="btn btn-warning btn-sm" asp-action="Edit" asp-controller="ModelFromSuppliers" asp-route-id="@item.ModelFromSupplierID">
                                            <i class="fa fa-pencil-square-o"></i>&nbsp; Sửa
                                        </a>


                                        <a class="btn btn-primary btn-sm" asp-action="Details" asp-controller="ModelFromSuppliers" asp-route-id="@item.ModelFromSupplierID">
                                            <i class="fa fa-info"></i>&nbsp; Chi tiết
                                        </a>


                                        <a class="btn btn-danger btn-sm" asp-action="Delete" asp-controller="ModelFromSuppliers" asp-route-id="@item.ModelFromSupplierID">
                                            <i class="fa fa-trash-o"></i>&nbsp; Xóa
                                        </a>
                                    </div>

                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                    @{

                        PaginatedList<MobileStore.Models.ModelFromSupplier> PaginatedModel = Model.ModelFromSuppliers as PaginatedList<MobileStore.Models.ModelFromSupplier>;

                        string prevDisabled = !PaginatedModel.HasPreviousPage ? "disabled" : "";

                        string nextDisabled = !PaginatedModel.HasNextPage ? "disabled" : "";


                    }
                    <nav aria-label="Page navigation example">
                        <ul class="pagination">
                            <li class="page-item @prevDisabled">
                                <a asp-action="Details"
                                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                                   asp-route-page="@(PaginatedModel.PageIndex - 1)"
                                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                                   asp-route-id="@Model.StockReceiving.StockReceivingID"
                                   class="page-link">Previous</a>
                            </li>
                            @for (var i = 1; i <= PaginatedModel.TotalPages; i++)
                            {
                                <li class="page-item @( @PaginatedModel.PageIndex == i ? "active" : " " )">
                                    <a asp-action="Details"
                                       asp-route-sortOrder="@ViewData["CurrentSort"]"
                                       asp-route-page="@i"
                                       
                                       asp-route-id="@Model.StockReceiving.StockReceivingID"
                                       asp-route-currentFilter="@ViewData["CurrentFilter"]" class="page-link">@(i)</a>
                                </li>

                            }
                            <li class="page-item @nextDisabled">
                                <a asp-action="Details"
                                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                                   asp-route-page="@(PaginatedModel.PageIndex + 1)"
                                   
                                   asp-route-id="@Model.StockReceiving.StockReceivingID"
                                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                                   class="page-link">Next</a>
                            </li>
                        </ul>
                    </nav>

                </div>
            </div>
        </div>
    </div>
</div>

<div>
    <a asp-action="Index"><button type="button" class="btn btn-success"><i class="fa fa-angle-left"></i>&nbsp; Trở về</button></a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}